apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply from: 'tinker-support.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('D:\\mywork\\MyApplication8_2\\mytest.jks')
            storePassword '123456'
        }
    }

    repositories {
        flatDir {
            dirs 'libs', '../mylibrary/libs'
        }
    }

    defaultConfig {
        applicationId "yijiayou.wp.net.ejyh5navdemo"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        resValue("string", "app_name", "一万响")
        signingConfig signingConfigs.release
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                qqappid      : "1234",
                // 极光
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "e4db16b96421234484349836", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        multiDexEnabled true

//        android studio 自动配置Android.mk 和application.mk
//        ndk{
//            moduleName "JniTest"
//            ldLibs "log", "z", "m"
//            abiFilters 'armeabi','arm64-v8a','armeabi-v7a','x86','x86_64'
//        }

/*        //手动自己配置Android.mk 和application
        sourceSets.main {
            jni.srcDirs = []//禁用as自动生成mk
        }
        task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
            commandLine "D:\\android-ndk-r16b\\ndk-build.cmd",//配置ndk的路径
                    'NDK_PROJECT_PATH=build/intermediates/ndk',//ndk默认的生成so的文件
                    'NDK_LIBS_OUT=src/main/jniLibs',//配置的我们想要生成的so文件所在的位置
                    'APP_BUILD_SCRIPT=src/main/jni/Android.mk',//指定项目以这个mk的方式
                    'NDK_APPLOCATION_MK=src/main/jni/Application.mk'//指定项目以这个mk的方式
        }
        tasks.withType(JavaCompile) {
                //使用ndkBuild
            compileTask -> compileTask.dependsOn ndkBuild
        }*/

    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
////            applicationIdSuffix ".debug"
//            minifyEnabled false
//            resValue("string", "app_name", "一万响1")
//        }
    }


    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}




dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:27.1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //    compile project(':text2')
    //    compile project(':text1')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    //    implementation 'com.android.support:appcompat-v7:27.1.0'
    //    implementation 'com.android.support:design:27.1.0'
    //    implementation 'com.android.support:support-v4:27.1.1'
    compile 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    //    compile('com.alibaba.android:vlayout:1.2.8@aar') {
    //        transitive = true
    //        exclude module: 'recyclerview-v7'
    //    }
    compile 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-fragment:27.1.1'
    //
    compile 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    //    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'//retrofit现在只支持到rxjava1.XX
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // 大神写的这个库可以支持到rxjava2.X
    compile 'cn.jzvd:jiaozivideoplayer:6.2.9'
    implementation 'com.github.rubensousa:gravitysnaphelper:1.5'
    compile 'cn.jiguang.sdk:jpush:3.1.1'
    // 此处以JPush 3.1.1 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.9'
    // 此处以JCore 1.1.9 版本为例。
    implementation('com.github.bumptech.glide:glide:4.7.1') {

    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    compile 'com.github.bumptech.glide:okhttp3-integration:4.7.1'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'org.litepal.android:core:2.0.0'
    compile 'org.greenrobot:eventbus:3.1.1'
    implementation project(':ejy-core')
    implementation project(':mylibrary')

    compile 'com.google.zxing:core:3.3.0'

    compile 'com.github.yalantis:ucrop:2.2.2'

    compile 'com.hyman:flowlayout-lib:1.1.2'

//    //注释掉原有bugly的仓库
//    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
//    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
//    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
//    compile 'com.tencent.tinker:tinker-android-lib:1.9.6'
//    compile 'com.tencent.bugly:nativecrashreport:3.3.1' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.10.0') {
        exclude group: 'com.android.support'
    }

    implementation 'com.zxy.android:tiny:1.1.0'

}
